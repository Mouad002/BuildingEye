package com.example.buildingeye.functional;

import org.bytedeco.opencv.global.opencv_highgui;
import org.bytedeco.opencv.global.opencv_imgproc;
import org.bytedeco.opencv.opencv_core.Mat;
import org.bytedeco.opencv.opencv_core.Rect;
import org.bytedeco.opencv.opencv_core.RectVector;
import org.bytedeco.opencv.opencv_core.Scalar;
import org.bytedeco.opencv.opencv_videoio.VideoCapture;

import java.util.Arrays;

public class WebcamHelper implements Runnable {

    @Override
    public void run() {
        // initial embeddings to facilitate the comparision
        float[] mouad = {-0.011190136f, 0.017223421f, -0.018656667f, 0.011735756f, 0.026868073f, 6.441498E-4f, 0.054572295f, -0.00564444f, -0.08280964f, 0.053131606f, 0.0010329777f, -0.031344406f, -0.0183832f, -0.015184657f, 0.0059287604f, -0.0051580844f, -0.053548917f, 0.0026864656f, -0.0049741487f, 0.032165237f, 0.031914942f, 0.13725169f, -0.00503182f, -0.07796929f, 0.0133189615f, -0.0057381983f, 0.030936178f, -0.07554524f, -0.014325744f, -0.061885566f, 0.004373501f, 0.04269548f, 0.006925417f, 0.055709217f, 0.037791207f, -0.011552458f, 0.013389443f, -0.019436348f, 0.010146403f, -0.093338944f, 0.053166445f, -0.043586474f, 0.050108552f, -0.029900163f, -0.06424116f, 0.0076388437f, -0.091014974f, -0.0439022f, -0.06213544f, 0.0156676f, 0.054289985f, -0.08800286f, -0.0020801865f, -0.043610267f, -0.015442184f, -0.09986881f, -0.022160877f, 0.019845104f, -0.0020804994f, 0.0062224017f, 0.0724765f, 0.017153306f, 0.050499886f, 0.00804806f, -0.053725343f, -0.06620758f, 0.02209092f, -0.060648788f, 0.026208833f, 0.057552323f, -0.054819085f, -0.021852719f, 0.030765558f, 0.013543185f, 0.07073164f, 0.009974851f, 0.006697225f, -0.009529415f, 0.07144627f, -0.024463907f, 0.06243099f, 4.2223927E-4f, -0.07505816f, -0.105341755f, -0.0120359715f, 0.020969588f, 0.048434123f, -0.028538115f, -0.056118093f, -0.029320419f, -0.04331789f, -0.024406191f, -0.025999395f, 0.024884438f, -0.005393636f, -0.02007534f, 0.05793763f, -0.011288129f, -0.07232382f, 0.01130278f, 0.03856056f, 0.017313268f, 0.052387238f, 0.013722997f, -0.041067883f, -0.08072689f, 0.034680396f, -0.019183021f, -0.024924655f, 0.004634208f, -0.011164475f, -0.04932827f, 0.07276131f, -0.07735639f, 0.01597538f, -0.072740816f, -0.036191784f, 0.033155706f, -0.002356944f, 0.04200376f, -0.0016482457f, 0.009909841f, -0.07704532f, 0.034859058f, -0.061067235f, -0.007604009f, 0.08259217f, 0.0030311986f, 0.037520044f, 0.054073457f, 0.0597687f, -0.05862878f, -0.024651943f, -0.007257907f, -0.015236604f, 0.017588971f, 0.09018761f, 0.060813207f, -0.03469734f, 0.062325478f, 0.04446475f, 0.03163247f, 0.03511456f, 0.026975352f, -0.058571007f, 0.009622467f, -9.4099104E-4f, -0.021310363f, 0.0013056211f, -0.002631331f, -0.042586133f, 0.0046569826f, -0.089838505f, -0.10608937f, 0.08512269f, -0.075485125f, -0.059690993f, 0.022720981f, -0.082084924f, 0.08738455f, -0.040413074f, -0.032024898f, 0.070339136f, 0.022219677f, -0.049879614f, 0.0010382008f, -0.05853307f, -0.009109506f, 0.0073420657f, -0.020505358f, 0.016680757f, -0.009189281f, 0.058453113f, 0.054450456f, -0.022164298f, 0.00945424f, -0.027120788f, 0.028644325f, -0.015775992f, 0.084156804f, -0.0060141985f, -0.012787387f, 0.058964938f, -0.016462406f, 0.014046021f, 0.0075373324f, 0.0963611f, -0.027348643f, 0.031244121f, 0.042371757f, 0.012267289f, 0.016597057f, 0.0544004f, 0.020245785f, 0.06810405f, 0.023093194f, -0.047655977f, 0.0054209395f, 0.027140336f, -0.059720803f, 0.031307943f, -0.040645633f, -0.003606792f, -0.0037289308f, -0.029485613f, -0.0043838047f, 0.045082383f, 0.042732365f, -0.020419436f, -0.02344608f, 0.011985545f, -0.006077017f, 0.0060257334f, 0.018503943f, -0.013059864f, 0.03421058f, 0.063706525f, -0.065102965f, -0.02127843f, 0.037987847f, 0.020560728f, 0.079139724f, 0.009227359f, 0.0972633f, 0.108923405f, -8.9175144E-4f, 0.0016071353f, -0.07964812f, 0.043691933f, 0.0078094504f, 0.003739999f, 0.072714224f, -0.022410616f, -0.0030826458f, -0.097850576f, 0.023698483f, -0.040367108f, -0.026828062f, 0.021807328f, -0.0014659363f, -0.027224082f, -0.054721583f, -0.10869079f, 0.017201437f, 0.035047166f, 0.02767481f, 0.041816555f, -0.060235422f, 0.08611715f, -0.008803334f, -0.06936287f, -7.4748625E-4f, -0.058486022f, -0.084993556f, 0.007753937f, -0.058688417f, -0.05716289f, -0.0025213102f, -0.05403067f, -0.016192349f, 0.0045549157f, 0.068026304f, -0.036768544f, -6.8921613E-4f, 0.013377807f, 0.016013343f, -0.0064656804f, -0.0014096877f, 0.06231516f, -0.055701196f, 0.10539091f, 0.030202378f, -7.523129E-4f, -0.023573611f, 0.03587405f, 0.083853304f, 0.04447161f, -0.047385734f, 0.039947994f, 0.07117676f, 0.06674829f, 0.023414863f, -0.0246356f, -0.082175486f, -0.0061447835f, -0.0075588613f, -0.045506544f, -0.03995474f, 0.015737278f, 0.10069838f, -0.03689882f, -0.035852898f, 0.020631569f, 0.013924904f, -0.022677252f, 0.007919336f, -0.059362307f, -0.026145933f, -0.05153809f, -0.0034064685f, 0.037521854f, 0.025673034f, 0.018103708f, 0.037289552f, -0.029156132f, 9.188443E-4f, -0.019044088f, -0.025188856f, -0.053614788f, -0.020468593f, 0.011964043f, 0.058285683f, 0.035075165f, -0.007927901f, 0.028973293f, -0.03953632f, -0.0041064066f, -0.04193735f, -0.013639788f, -0.028961467f, 0.032802556f, -0.0060333614f, -0.06391107f, -0.028992983f, 0.04663607f, -0.018679505f, -0.011764981f, -0.032533612f, -0.029802943f, -0.02887563f, -0.0129297115f, 0.026635265f, -0.042515304f, 0.0054773544f, -0.02620679f, 0.028977888f, 0.02656477f, -0.07968758f, -0.042527292f, -0.03828628f, 0.032464348f, 0.016611306f, 0.02673179f, -0.005219681f, -0.019698013f, 0.037775364f, -0.047547586f, -0.043309804f, -0.079225324f, -0.019148214f, -0.08559074f, -0.020616386f, 0.019773226f, 0.046957236f, -0.023295453f, 0.040374372f, -0.003242434f, 0.012060695f, -0.011586922f, -0.018881781f, 0.05762288f, -0.0111818705f, 0.0025270227f, 0.007115221f, -0.006865297f, 9.587325E-4f, -0.043854356f, 0.029672338f, -0.08398208f, -0.049122334f, 0.021363586f, -0.013005765f, -0.03601764f, 0.052443873f, -0.048013743f, -0.026332404f, -0.077436544f, 0.06023005f, -0.054230902f, 0.046660732f, 0.031197393f, 0.07019549f, 0.065871134f, -0.04194065f, 0.089164816f, -0.04863573f, 0.015854612f, 0.04033747f, -0.0017773253f, 0.0901835f, 0.035604615f, -0.055497486f, -0.032116644f, 0.014712686f, -0.0382542f, -0.01958858f, -0.064072065f, 0.064984724f, -0.0285997f, 0.014025803f, -0.07803206f, -0.023838636f, -0.0018842074f, 0.024372308f, 0.014082103f, 0.047139518f, -0.027889723f, -0.0042138468f, 0.053594127f, 0.0016219186f, -0.009503239f, -0.021715457f, 0.027361484f, 0.024978837f, -0.027457502f, -0.03931727f, -0.018615704f, 0.022722462f, -0.008232362f, -0.071920715f, -0.048876997f, -0.07852698f, 0.037045885f, -0.048136435f, 0.025908934f, 0.018114353f, 0.03687921f, -0.038899437f, 0.032553036f, -0.010428471f, -0.06345851f, -0.034663636f, 0.018004732f, -0.09320385f, 0.06904522f, -0.0032571736f, -0.035431284f, -0.03426971f, -0.013255956f, 8.6981035E-4f, -0.048423633f, 0.011994649f, -0.018771127f, 0.035150535f, -0.022851018f, -0.07464995f, -0.013272949f, 0.07324272f, 0.014366567f, -0.07269179f, 0.03532054f, -0.08955902f, -0.023178041f, -0.023100734f, -0.06327002f, -0.031198338f, 0.016358797f, -0.0060031153f, -0.013056909f, 0.06565736f, 0.020335287f, 0.09822701f, 0.115601346f, 0.06751581f, -0.0011309012f, 0.08984919f, 0.04840322f, -0.036667455f, 0.02067737f, -0.05088419f, 0.030080255f, -0.025553148f, -0.0039687636f, -0.001977558f, -0.058978565f, -0.0026325844f, 0.013907384f, 0.04541143f, -0.008224917f, -0.0061514936f, -0.04844046f, -0.023285516f, 0.029113615f, 0.03318071f, 0.046336353f, -0.071267255f, 0.032439213f, -0.007869225f, -0.03672563f, -0.0010239307f, 0.0056118993f, -0.060938496f, 0.04933966f, -0.032962255f, -0.034156464f, -0.004293242f, 0.092561275f, 0.012608182f, 0.05950274f, -0.013458048f, 0.063770294f, 0.012330852f, 0.04498724f, -0.02309849f, -0.047864344f, 0.019474998f, 0.044347145f, -0.059150837f, -0.05546832f, -0.03182592f, -0.041145243f, 0.029172556f};
        float[] fatiha = {-0.043205094f, 0.02944736f, -0.07097196f, 0.015372722f, 0.0022864453f, -0.020827f, -0.01856055f, 0.020283483f, 0.02595766f, 0.009470849f, 0.08592746f, -0.0056517283f, 0.033228576f, -0.0043626586f, -0.06972221f, -0.016914392f, -0.033430222f, 0.07042539f, -0.014856876f, 0.0016608573f, 0.031215193f, 0.022223542f, 0.07778502f, -0.042180907f, -0.049661044f, -0.019915149f, 0.036950916f, -0.034783408f, 0.008919666f, -0.010334839f, 0.052190777f, 0.013243921f, 0.009435915f, -0.008574099f, 0.04691382f, 0.05777121f, 0.113645755f, 0.013500207f, 0.056794986f, 0.0265908f, -0.06294302f, -0.046402372f, 0.03517344f, -0.0013023324f, -0.011102283f, -0.026581028f, -0.038668957f, 0.024047364f, -0.045979697f, 0.013686636f, -0.075875536f, -0.07959554f, -0.015692756f, 0.039685294f, 0.01361357f, 0.019452723f, 0.012865879f, -0.012007119f, 0.035103332f, -0.058352493f, 0.024128443f, 0.028751083f, -0.060842138f, 0.04237492f, -0.014145564f, -0.03689098f, 0.0404493f, -0.0048783286f, 0.032429375f, -0.015883734f, -0.018086497f, -0.09097794f, 0.01918368f, 0.019492708f, -0.028435465f, -0.09244603f, -0.05157083f, -0.009107075f, -0.032955818f, -0.079748966f, 0.0051371865f, 0.0658256f, 0.055091888f, -0.0064437175f, -0.057413552f, 0.08502814f, -0.030419307f, -0.014744907f, -0.040944893f, -0.0842854f, -0.033599425f, 0.025204882f, -0.042583507f, -0.040336307f, 0.013427067f, 0.074126944f, -0.00417028f, -0.034688745f, -0.024869815f, 0.026946023f, -0.058050256f, 0.053538606f, 0.0062641148f, -0.014212737f, -0.060913388f, -0.054121185f, -0.06657303f, -0.113999955f, -0.064036116f, -0.04741029f, 0.04076985f, 0.08998935f, 0.012846568f, -0.018503485f, 0.06498228f, 0.022017112f, 0.051984202f, 0.08066901f, -0.016363584f, -0.018079916f, -0.02882543f, -0.011368432f, 0.023767143f, 0.038510304f, -0.06240358f, -0.01852444f, -0.06353331f, 0.02476374f, -0.025700813f, -0.029817225f, 0.01257527f, 0.020610403f, -0.033484705f, -0.028785484f, 0.07145098f, 0.02089727f, -0.07525289f, -0.052120294f, 0.025949942f, 0.033142403f, -0.06792389f, 0.012767875f, -0.022181632f, 0.0154185295f, -0.04530612f, 0.05439921f, -0.02765077f, 0.057143457f, 0.05278887f, 0.023557873f, 0.05453363f, 0.040053125f, -0.002752577f, -0.023753254f, 0.054801513f, 0.03865801f, -0.061675012f, 0.018374909f, -0.0052828365f, -0.076683685f, -0.01817457f, 0.07405978f, 0.045803398f, 0.009664546f, -0.014452653f, -0.0067626927f, -0.05071856f, -0.046932932f, 0.0042543137f, 0.025486993f, -0.07760767f, -0.03779582f, -0.0013288975f, 0.057357445f, 0.0026963465f, -0.008798417f, -0.046418145f, 0.037168264f, 0.016663214f, -0.02643665f, 0.025867665f, -0.029144827f, 0.022330452f, -0.0051996456f, -0.021345004f, 0.0365925f, 0.020197257f, 0.051399823f, 0.043400005f, -0.013592652f, 3.3285594E-4f, 0.050709203f, 0.0070338952f, 0.032157287f, -0.004905182f, -0.00211375f, -0.043972187f, 0.05993232f, 0.03754089f, 0.026158871f, -0.06647139f, -0.026027113f, 0.024676805f, -0.00675821f, 0.07108743f, 0.09128249f, 0.0074272365f, -0.004880095f, 0.026984824f, -0.062014125f, 0.026088329f, 0.04736876f, -0.010976677f, 0.05196752f, -0.04893149f, 0.00581436f, 0.0049036336f, -0.04814936f, -0.031382263f, -0.033368308f, 0.01785333f, 0.004926928f, 0.07358012f, 0.021545643f, 0.024453204f, 0.024071535f, -0.0071584503f, -0.0077038095f, -0.009188043f, -0.01775806f, -0.011299525f, 0.097672425f, 0.01837551f, 0.051622976f, -0.026639404f, -0.011761174f, -0.0041979942f, -0.020375218f, 0.03546267f, -0.014512235f, -0.05712429f, 0.07548967f, 0.012806315f, -0.0039536897f, -0.09550672f, -0.04044154f, -0.051348105f, 0.014174767f, -0.034176625f, 0.059566386f, -0.08299459f, -0.08049428f, -0.0037781356f, 0.005977107f, 0.032341268f, -0.10873038f, 0.015439326f, -0.038266353f, 0.021148687f, -0.023021776f, 0.046884473f, -0.039807674f, -0.0035059971f, 0.017617332f, -0.08342533f, -0.056875907f, 0.040258564f, -0.034119282f, 0.0036252106f, -0.09354723f, 0.037453525f, 0.020930704f, 0.039986216f, 0.03470035f, -4.2186215E-4f, 0.06891476f, 0.06259695f, 0.0542911f, 0.06913025f, 0.009835906f, -0.019217957f, 0.03131168f, -0.00648222f, 0.01217689f, 0.0359528f, -0.0040250593f, 0.107316844f, -0.013328522f, 0.015386804f, 0.034905937f, 0.020287782f, -0.002557442f, -0.05076352f, 0.06903395f, -0.058460306f, 0.005932751f, -0.016096266f, 0.031001931f, 0.046335433f, -0.012718969f, -0.0418343f, 0.09872071f, -0.06782608f, 0.006277997f, -0.003125203f, -0.029233634f, -3.2538315E-4f, -0.008035679f, -0.034625396f, 0.021421673f, 0.024356592f, -0.021085536f, 0.0364592f, -0.0801533f, 8.020809E-4f, 0.114763565f, 0.05845705f, -0.0011876646f, 0.08806346f, 0.038595304f, -0.00579838f, -0.032200724f, 0.029737052f, 0.059808336f, 0.031110076f, 0.048798725f, 0.042502746f, 0.007846077f, 0.05029857f, -0.007184676f, 0.039169073f, -0.06455362f, -0.05291366f, -0.004373268f, -0.039215375f, -0.0015192907f, 0.004408767f, -0.0026594226f, 0.013797519f, -0.020001713f, 0.07028226f, -0.09357602f, -0.004919819f, 0.004037398f, 0.018176388f, 0.0074902f, -0.06407686f, 0.011174083f, 0.03854903f, 0.04129738f, -0.005095678f, -0.014059535f, 0.016390597f, -0.0059910743f, 0.05134223f, -0.045673065f, -0.00540463f, 0.013582638f, -0.052923802f, -0.039339703f, 0.06290721f, -0.026158944f, -0.046394736f, -0.046425242f, 0.12452282f, -0.03622598f, 0.029376704f, 0.065411836f, -0.056538682f, -0.05479752f, -0.007796874f, -0.014572653f, -0.026168926f, -0.0117158815f, -0.0406719f, 0.024754291f, 0.031560224f, 5.371347E-4f, -0.021222012f, -0.058300126f, 8.9681643E-4f, 0.010866086f, 0.104060374f, -0.024896763f, -0.006533353f, -0.094373286f, -0.03916518f, -0.025496168f, -0.047619324f, 0.007879442f, 0.040354714f, 0.04695537f, 0.017422372f, 0.0023165948f, 0.0059067034f, 0.022848567f, 0.026873617f, 0.09001654f, 1.3956253E-4f, -0.0229752f, -0.015354333f, -0.05728634f, -0.012866296f, 0.08140035f, 0.123173304f, 0.06283555f, -0.07152828f, 0.04647178f, 0.050935924f, 0.0029121565f, -0.026627531f, -0.009645521f, -0.03452478f, 0.025807343f, -0.035477657f, 0.052782007f, 0.082910076f, -0.011648061f, -0.04647476f, -0.01359964f, 0.039027948f, -0.016077407f, -0.015552574f, -0.019434059f, -0.104648076f, 0.08470631f, 0.08731778f, -0.009557617f, 0.0020651668f, 0.070308834f, -0.051632673f, 0.057891447f, 0.013464412f, 0.023101471f, 0.045003735f, -0.0021349406f, -0.03205025f, -0.08047801f, -0.029752022f, 0.02744523f, 0.013148008f, 0.030457413f, -0.03986768f, 0.04977866f, 0.029201422f, 0.06314017f, -0.054108437f, 0.029123854f, 0.04875747f, -0.014773897f, 0.037084457f, 0.046535432f, -0.027837547f, 0.01605413f, -0.017510368f, 0.08765324f, -0.081032746f, 0.017685715f, 0.06410963f, 0.016449189f, 0.043396123f, 0.06266823f, -0.010493133f, 0.042516086f, -0.089228444f, -0.01710754f, 0.003394761f, 0.018883877f, -0.027037865f, 0.089451045f, 0.029304856f, 0.030563215f, 0.016102701f, 0.0107790185f, 0.045170173f, 0.028313948f, -0.025367761f, 0.003985187f, -0.029639678f, -0.024879506f, 0.03484342f, -0.05268974f, -0.026910288f, 0.028943598f, -0.074251704f, 0.02319961f, 0.00865655f, 0.095937796f, 8.3125074E-4f, -0.06314331f, 0.0775548f, -0.06996258f, -0.027778886f, 0.009776747f, 0.071677715f, 0.0013461035f, 0.049790394f, 0.038642704f, 0.0038262215f, -0.06665018f, 0.021823851f, -0.031129697f, 0.055550486f, 0.0063676597f, 0.010071793f, 0.052883685f, -5.1968417E-4f, 0.034477357f, -0.0076089697f, -0.0042423853f, 0.041563008f, 0.09506952f};

        // the color of the rectagle of the detected face
        Scalar rectangleColor = null;
        Scalar greenColor = new Scalar(0, 255, 0, 0);
        Scalar redColor = new Scalar(0, 0, 255, 0);

        // the model that contains face detection function and face embeddings extraction function
        FaceRecognitionHelper fee = new FaceRecognitionHelper();

        // the variable that will hold the new embeddings later
        float[] newEmbeddings = null;

        // Open the webcam
        VideoCapture webcam = new VideoCapture(0); // 0 for default camera
        if (!webcam.isOpened()) {
            System.err.println("Error: Could not open the webcam.");
            return;
        }

        // the variable that will hold the frame later
        Mat frame = new Mat();
        System.out.println("Starting webcam...");
        
        while (true) {
            // Read a frame from the webcam
            webcam.read(frame);
            if (frame.empty()) {
                System.err.println("Error: Could not read frame from webcam.");
                break;
            }

            // Convert the frame to grayscale
            Mat grayFrame = new Mat();
            opencv_imgproc.cvtColor(frame, grayFrame, opencv_imgproc.COLOR_BGR2GRAY);

            // Detect faces in the frame
            RectVector faces = new RectVector();
            fee.getFaceDetector().detectMultiScale(grayFrame, faces);

            // If a face is detected
            if (faces.size() > 0) {
                Rect faceRect = faces.get(0); // Take the first detected face
                Mat croppedFace = new Mat(frame, faceRect); // Crop the face from the frame

                // extract the embeddings from the new detected face
                newEmbeddings = fee.faceExtractorFromMat(croppedFace);

                // calculate the distance between the new and the existing embeddings
                double distance = fee.cosineSimilarity(newEmbeddings, mouad);

//                // uncomment this line to see the extracted embeddings on the console
//                System.out.println(Arrays.toString(newEmbeddings));

                // if the detected face matched the given the rectangle will be green or red in the other case
                rectangleColor = (distance>0.5)? greenColor:redColor;

                // Draw a rectangle around the face (for visualization)
                opencv_imgproc.rectangle(frame, faceRect, rectangleColor);
            }

            // Show the frame with face detection
            String webcamWindow = "Webcam - Face Detection";
            opencv_highgui.imshow(webcamWindow, frame);

            // Exit on pressing 'q'
            if (opencv_highgui.waitKey(30) == 'q') {
                break;
            }
        }
    }
}
